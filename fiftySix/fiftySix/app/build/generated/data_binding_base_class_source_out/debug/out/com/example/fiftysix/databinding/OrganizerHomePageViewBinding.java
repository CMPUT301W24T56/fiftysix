// Generated by view binder compiler. Do not edit!
package com.example.fiftysix.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.fiftysix.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrganizerHomePageViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton buttonAddEvent;

  @NonNull
  public final ImageButton buttonOrganizerHome;

  @NonNull
  public final ImageButton buttonOrganizerProfile;

  @NonNull
  public final ConstraintLayout homePageOrganizer;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final ImageButton notificationButton;

  @NonNull
  public final RecyclerView orgHomeRecyclerView;

  private OrganizerHomePageViewBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton buttonAddEvent, @NonNull ImageButton buttonOrganizerHome,
      @NonNull ImageButton buttonOrganizerProfile, @NonNull ConstraintLayout homePageOrganizer,
      @NonNull LinearLayout linearLayout, @NonNull ImageButton notificationButton,
      @NonNull RecyclerView orgHomeRecyclerView) {
    this.rootView = rootView;
    this.buttonAddEvent = buttonAddEvent;
    this.buttonOrganizerHome = buttonOrganizerHome;
    this.buttonOrganizerProfile = buttonOrganizerProfile;
    this.homePageOrganizer = homePageOrganizer;
    this.linearLayout = linearLayout;
    this.notificationButton = notificationButton;
    this.orgHomeRecyclerView = orgHomeRecyclerView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrganizerHomePageViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrganizerHomePageViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.organizer_home_page_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrganizerHomePageViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAddEvent;
      ImageButton buttonAddEvent = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddEvent == null) {
        break missingId;
      }

      id = R.id.button_organizer_home;
      ImageButton buttonOrganizerHome = ViewBindings.findChildViewById(rootView, id);
      if (buttonOrganizerHome == null) {
        break missingId;
      }

      id = R.id.buttonOrganizerProfile;
      ImageButton buttonOrganizerProfile = ViewBindings.findChildViewById(rootView, id);
      if (buttonOrganizerProfile == null) {
        break missingId;
      }

      ConstraintLayout homePageOrganizer = (ConstraintLayout) rootView;

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.notification_button;
      ImageButton notificationButton = ViewBindings.findChildViewById(rootView, id);
      if (notificationButton == null) {
        break missingId;
      }

      id = R.id.orgHomeRecyclerView;
      RecyclerView orgHomeRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (orgHomeRecyclerView == null) {
        break missingId;
      }

      return new OrganizerHomePageViewBinding((ConstraintLayout) rootView, buttonAddEvent,
          buttonOrganizerHome, buttonOrganizerProfile, homePageOrganizer, linearLayout,
          notificationButton, orgHomeRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
